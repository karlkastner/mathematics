% 2024-01-24 12:34:14.459646777 +0100
function resfun(obj,k)
	% R = -dt*a/dx^2*[1,0,1]
	%  r = b - (a0*x - dt*a*[1,-2,1]/dx^2*x)
	% advection-diffusion part
	for idx=1:obj.nvar

		% diffusion only
		% TODO, why are index 1,3? swapped in a
		obj.s(k).res(:,:,idx) = ...
			( ...
			    (   2*obj.e(1,idx)/obj.s(k).dx(1)^2 ...
                              + 2*obj.e(2,idx)/obj.s(k).dx(2)^2 ...
			      - obj.ad(1,2,idx)/obj.s(k).dx(1) ...
			      - obj.ad(2,2,idx)/obj.s(k).dx(2) ...
			    ) * obj.s(k).x(:,:,idx) ...
			  - (  obj.e(1,idx)/obj.s(k).dx(1)^2 ...
			     + obj.ad(1,3,idx)/obj.s(k).dx(1) ...
                            )*circshift(obj.s(k).x(:,:,idx),-1,1) ... 
			  - (  obj.e(1,idx)/obj.s(k).dx(1)^2 ...
			     + obj.ad(1,1,idx)/obj.s(k).dx(1) ...
                            )*circshift(obj.s(k).x(:,:,idx),+1,1) ... 
			  - (  obj.e(2,idx)/obj.s(k).dx(2)^2 ...
			     + obj.ad(2,3,idx)/obj.s(k).dx(2) ...
                            )*circshift(obj.s(k).x(:,:,idx),-1,2) ... 
			  - (obj.e(2,idx)/obj.s(k).dx(2)^2 ...
                             + obj.ad(2,1,idx)/obj.s(k).dx(2) ...
                            )*circshift(obj.s(k).x(:,:,idx),+1,2) ... 
			  - obj.s(k).b(:,:,idx) ...
			);

		% reaction part
		for jdx=1:obj.nvar
			% TODO why no - in front of a?, c.f. jacobi_step
			obj.s(k).res(:,:,idx) = obj.s(k).res(:,:,idx) ...
				  + (obj.s(k).a{idx,jdx}.*obj.s(k).x(:,:,jdx));
		end	 % for jdx=1:nvar	
	end % for idx = 1:nvar
end % resfun

