% 2024-01-24 12:34:14.459646777 +0100
% Karl Kastner, Berlin
%% residual of the linear system 
function resfun(obj,k)
	% R = -dt*a/dx^2*[1,0,1]
	% r = b - (a0*x - dt*a*[1,-2,1]/dx^2*x)
	% advection-diffusion part
	if (isempty(obj.fun))
	for idx=1:obj.nvar

		% advection-diffusion only
		% TODO, why are index 1,3? swapped in a
		obj.s(k).res(:,:,idx) = ...
			( ...
			  ... % centre
			    (   2*obj.e(1,idx)/obj.s(k).dx(1)^2 ...
                              + 2*obj.e(2,idx)/obj.s(k).dx(2)^2 ...
			      - obj.ad(1,2,idx)/obj.s(k).dx(1) ...
			      - obj.ad(2,2,idx)/obj.s(k).dx(2) ...
			    ) * obj.s(k).x(:,:,idx) ...
			  ... % up
			  - (  obj.e(1,idx)/obj.s(k).dx(1)^2 ...
			     + obj.ad(1,3,idx)/obj.s(k).dx(1) ...
                            )*circshift(obj.s(k).x(:,:,idx),-1,1) ... 
			  ... % down
			  - (  obj.e(1,idx)/obj.s(k).dx(1)^2 ...
			     + obj.ad(1,1,idx)/obj.s(k).dx(1) ...
                            )*circshift(obj.s(k).x(:,:,idx),+1,1) ... 
			  ... % left
			  - (  obj.e(2,idx)/obj.s(k).dx(2)^2 ...
			     + obj.ad(2,3,idx)/obj.s(k).dx(2) ...
                            )*circshift(obj.s(k).x(:,:,idx),-1,2) ... 
			  ... % right
			  - (obj.e(2,idx)/obj.s(k).dx(2)^2 ...
                             + obj.ad(2,1,idx)/obj.s(k).dx(2) ...
                            )*circshift(obj.s(k).x(:,:,idx),+1,2) ... 
			  ... % rhs
			  - obj.s(k).b(:,:,idx) ...
			);

		% reaction part
		for jdx=1:obj.nvar
			% TODO why no - in front of a?, c.f. jacobi_step
			obj.s(k).res(:,:,idx) = obj.s(k).res(:,:,idx) ...
				  + (obj.s(k).a{idx,jdx}.*obj.s(k).x(:,:,jdx));
		end	 % for jdx=1:nvar	
	end % for idx = 1:nvar
	else % if isempty, obj.fun
		for idx=1:obj.nvar
			obj.s(k).res(:,:,idx) = [ ...
				... % up
				  obj.s(k).diagonals(:,:,1,idx).*circshift(obj.s(k).x(:,:,idx),-1,1) ...
				... % down
				+ obj.s(k).diagonals(:,:,2,idx).*circshift(obj.s(k).x(:,:,idx),+1,1) ...
				... % left
				+ obj.s(k).diagonals(:,:,3,idx).*circshift(obj.s(k).x(:,:,idx),-1,2) ...
				... % right
				+ obj.s(k).diagonals(:,:,4,idx).*circshift(obj.s(k).x(:,:,idx),+1,2) ...
				... % reaction terms, including centre
				+ sum(obj.s(k).diagonals(:,:,5:(4+obj.nvar),idx).*obj.s(k).x,3) ...
				... % rhs
				- obj.s(k).b(:,:,idx) ...
			];
		end % for idx
	end % else of isempty obj.fun
end % resfun

